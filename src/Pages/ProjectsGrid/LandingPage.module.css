/* Variables */
:root {
    --white_color: #fff;
    /* Define this if not already defined globally */
}

.frame {
    width: 100%;
    height: 100vh;
    overflow: hidden;
    position: relative;
}

.frame::before {
    width: 500px;
    height: 400px;
    content: '';
    background-image: linear-gradient(70deg, #DC422A, blue);
    filter: blur(150px);
    position: absolute;
    z-index: -1;
    border-radius: 20% 30% 80% 10%;
    top: 50%;
    left: 50%;
    transform: translate(-10%, -50%);
    transition: 1s;
}

.frame .list .item {
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0 0 0 0;
    opacity: 0;
    /* Hide all items by default */
    pointer-events: none;
    /* Disable interaction for non-active items */
    transition: opacity 0.5s ease-in-out;
    /* Smooth fade for items */
}

.frame .list .item.active {
    opacity: 1;
    /* Only active item is visible */
    z-index: 1;
    /* Ensure active item is on top */
    pointer-events: auto;
    /* Enable interaction for active item */
}

.frame .list .item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.frame .list .item .content {
    position: absolute;
    top: 15%;
    width: 1140px;
    max-width: 80%;
    left: 50%;
    transform: translateX(-50%);
    padding-right: 30%;
    box-sizing: border-box;
    color: #fff;
    text-shadow: 0 5px 10px #0004;
}

.frame .list .item .author {
    font-weight: bold;
    letter-spacing: 10px;
}

.frame .list .item .title,
.frame .list .item .topic {
    font-size: 5em;
    font-weight: bold;
    line-height: 1.3em;
}

.frame .list .item .topic {
    color: #f1683a;

}

.frame .list .item .des {
    margin-top: 10px;
    stroke-width: 3;

}

.frame .list .item .buttons {
    display: flex;
    gap: 20px;
    margin-top: 20px;
}


.frame .list .item .buttons button {
    width: fit-content;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 12px;
    border: none;
    outline: none;
    transition: 0.5s;
    cursor: pointer;
    /* Add pointer cursor */
}

.frame .list .item .buttons button:hover {
    background-color: #DC422A;
    cursor: pointer;
}

/* Thumbnail */
.thumbnail {
    position: absolute;
    bottom: 20%;
    left: 60%;
    width: max-content;
    z-index: 100;
    display: flex;
    gap: 20px;
}

.thumbnail .item {
    width: 150px;
    height: 220px;
    flex-shrink: 0;
    position: relative;
    border: 2px solid transparent;
    /* Default border */
    transition: border 0.3s ease-in-out;
    /* Smooth transition for border */
}


.thumbnail .item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 20px;
}

.thumbnail .item .content {
    color: #fff;
    position: absolute;
    bottom: 10px;
    left: 10px;
    right: 10px;
    background: rgba(0, 0, 0, 0.5);
    /* Semi-transparent background for text */
    padding: 5px;
    border-radius: 5px;
}

.thumbnail .item .content .title {
    font-weight: 500;
    font-size: 0.9em;
    /* Adjust font size for thumbnails */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.thumbnail .item .content .des {
    font-weight: 300;
    font-size: 0.7em;
    /* Adjust font size for thumbnails */
    display: -webkit-box;
    -webkit-line-clamp: 2;
    /* Show max 2 lines */
    -webkit-box-orient: vertical;
    overflow: hidden;
}

/* arrows */
.arrows {
    position: absolute;
    bottom: 10%;
    left: 60%;
    z-index: 100;
    width: 300px;
    max-width: 30%;
    display: flex;
    gap: 10px;
    align-items: center;
}

.arrows button {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: var(--white_color);
    background-color: rgba(255, 255, 255, 0.5);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: none;
    font-family: monospace;
    font-weight: bold;
    transition: .5s;
}

.arrows button:hover {
    background-color: #fff;
    color: #000;
}


/* Animation for active content */
.frame .list .item.active .content .author,
.frame .list .item.active .content .title,
.frame .list .item.active .content .topic,
.frame .list .item.active .content .des,
.frame .list .item.active .content .buttons {
    transform: translateY(50px);
    filter: blur(20px);
    opacity: 0;
    animation: showContent .5s 1s linear 1 forwards;
}

@keyframes showContent {
    to {
        transform: translateY(0px);
        filter: blur(0px);
        opacity: 1;
    }
}

.frame .list .item.active .content .title {
    animation-delay: 1.2s !important;
}

.frame .list .item.active .content .topic {
    animation-delay: 1.4s !important;
}

.frame .list .item.active .content .des {
    animation-delay: 1.6s !important;
}

.frame .list .item.active .content .buttons {
    animation-delay: 1.8s !important;
}

/* Animations for slide transitions (optional, can be refined) */
/* This part gets more complex if you want specific visual "slides" 
   instead of just fading between active items.
   For a simple fade, the opacity transition on .item is enough.
   If you want more complex slide animations, you'll need to 
   adjust how `animationClass` affects individual items' transform/position. */

/* Example for 'next' animation: The item that was active slides out */
.frame.next .list .item:not(.active) {
    /* You might want to slide the *previous* active item out */
    /* This requires more complex state management or different CSS approach */
    /* For now, a simple fade might be better with the current React state */
}

/* Example for 'prev' animation */
.frame.prev .list .item:not(.active) {
    /* Same as above, complex without specific old/new item tracking */
}

.frame .time {
    position: absolute;
    z-index: 1000;
    width: 0%;
    height: 3px;
    background-color: #f1683a;
    left: 0;
    top: 0;
}

.frame.next .time,
.frame.prev .time {
    animation: runningTime 3s linear 1 forwards;
}

@keyframes runningTime {
    from {
        width: 100%
    }

    to {
        width: 0
    }
}


.frame.next .arrows button,
.frame.prev .arrows button {
    pointer-events: none;
}


@media screen and (max-width: 678px) {
    .frame .list .item .content {
        padding-right: 0;
    }

    .frame .list .item .content .title {
        font-size: 30px;
    }

    .frame .list .item .content .topic {
        font-size: 2em;
    }

    .thumbnail {
        left: 50%;
        transform: translateX(-50%);
        bottom: 5%;
        gap: 10px;
    }

    .thumbnail .item {
        width: 100px;
        height: 150px;
    }

    .arrows {
        left: 50%;
        transform: translateX(-50%);
        bottom: 0;
        width: 200px;
    }
}

/* In your LandingPage.module.css */

.frame.jump .list .item {
    /* Maybe a simple fade or a subtle scaling effect for jumps */
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.frame.jump .list .item:not(.active) {
    opacity: 0;
}

.frame.jump .list .item.active {
    opacity: 1;
    transform: scale(1.02);
    /* Slight scale up on jump */
}

.frame.jump .list .item.active .content .author,
.frame.jump .list .item.active .content .title,
.frame.jump .list .item.active .content .topic,
.frame.jump .list .item.active .content .des,
.frame.jump .list .item.active .content .buttons {
    /* For direct jumps, content animation might be quicker or simpler */
    animation: fadeInContent 0.3s linear 1 forwards;
}

@keyframes fadeInContent {
    from {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@media screen and (max-width: 600px) {
    .frame {
        width: 100%;
        height: 100vh;
        overflow: hidden;
        position: relative;
    }

    .frame .list .item .content {
        position: absolute;
        top: 10%;
        width: 100%;
        max-width: 90%;
        transform: translateX(-50%);
        padding-right: 20%;
        box-sizing: border-box;
        color: #fff;
        text-shadow: 0 5px 10px #0004;
    }

    .thumbnail {
        position: absolute;
        bottom: 13%;
        margin-left: 120%;
        width: max-content;
        z-index: 100;
        display: flex;
        gap: 20px;
    }

    .arrows {
        position: absolute;
        bottom: 15%;
        left: 18%;
        z-index: 100;
        width: 300px;
        max-width: 30%;
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .list .item .topic {
        display: none;

    }
}